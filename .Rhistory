write.csv(otu_clr, "OTU_table_CLR.csv", row.names = TRUE)
write.csv(otu_log10, "OTU_table_Log10.csv", row.names = TRUE)
write.csv(otu_z, "OTU_table_Z.csv", row.names = TRUE)
# output file paths
cat("Files saved:\n")
cat("- OTU_table_TSS.csv\n")
cat("- OTU_table_CLR.csv\n")
cat("- OTU_table_Log10.csv\n")
cat("- OTU_table_Z.csv\n")
library("phyloseq")
library("microbiome")
library("ggplot2")      # graphics
library("readxl")       # necessary to import the data from Excel file
library("dplyr")        # filter and reformat data frames
library("tibble")       # Needed for converting column to row names
getwd() # checking file path
otu_mat<- read.csv("data_sets/HMP_V13_OTU_counts.csv", header = TRUE)
tax_mat<- read.csv("data_sets/HMP_V13_taxonomy_fix.csv", header = TRUE)
samples_df <- read.csv("data_sets/HMP_V13_participant_data.csv", header = TRUE)
otu_mat_2 <- otu_mat %>%
tibble::column_to_rownames("PSN") %>%
t() %>% # transpose for formatting
as.data.frame()
tax_mat_2 <- tax_mat %>%
as.data.frame() %>%
mutate(OTU = OTU_ID) %>%
tibble::column_to_rownames("OTU_ID")
rownames(samples_df) <- NULL
samples_df_2 <- samples_df %>%
tibble::column_to_rownames("PSN")
otu_mat_3 <- as.matrix(otu_mat_2)
tax_mat_3 <- as.matrix(tax_mat_2)
OTU = otu_table(otu_mat_3, taxa_are_rows = TRUE)
TAX = tax_table(tax_mat_3)
samples = sample_data(samples_df_2)
carbom <- phyloseq(OTU, TAX, samples)
carbom.compositional <- microbiome::transform(carbom, "compositional")
list.taxa.passing <- core_members(carbom.compositional, detection = 5/100, prevalence = 10/100)
filtered_physeq <- subset_taxa(carbom.compositional, OTU %in% list.taxa.passing)
# transformations
carbom_tss <- microbiome::transform(carbom, "compositional")
carbom_clr <- microbiome::transform(carbom, "clr")
library("phyloseq")
library("microbiome")
library("ggplot2")      # graphics
library("readxl")       # necessary to import the data from Excel file
library("dplyr")        # filter and reformat data frames
library("tibble")       # Needed for converting column to row names
getwd() # checking file path
otu_mat<- read.csv("data_sets/HMP_V13_OTU_counts.csv", header = TRUE)
tax_mat<- read.csv("data_sets/HMP_V13_taxonomy_fix.csv", header = TRUE)
samples_df <- read.csv("data_sets/HMP_V13_participant_data.csv", header = TRUE)
otu_mat_2 <- otu_mat %>%
tibble::column_to_rownames("PSN") %>%
t() %>% # transpose for formatting
as.data.frame()
tax_mat_2 <- tax_mat %>%
as.data.frame() %>%
mutate(OTU = OTU_ID) %>%
tibble::column_to_rownames("OTU_ID")
rownames(samples_df) <- NULL
samples_df_2 <- samples_df %>%
tibble::column_to_rownames("PSN")
otu_mat_3 <- as.matrix(otu_mat_2)
tax_mat_3 <- as.matrix(tax_mat_2)
OTU = otu_table(otu_mat_3, taxa_are_rows = TRUE)
TAX = tax_table(tax_mat_3)
samples = sample_data(samples_df_2)
carbom <- phyloseq(OTU, TAX, samples)
carbom.compositional <- microbiome::transform(carbom, "compositional")
list.taxa.passing <- core_members(carbom.compositional, detection = 5/100, prevalence = 10/100)
filtered_physeq <- subset_taxa(carbom.compositional, OTU %in% list.taxa.passing)
# transformations
carbom_tss <- t(filtered_physeq)
carbom_clr <- t(microbiome::transform(filtered_physeq, "clr"))
carbom_log10 <- t(microbiome::transform(filtered_physeq, "log10"))
carbom_z <- t(microbiome::transform(filtered_physeq, "Z"))
# Extract OTU tables
otu_tss <- abundances(carbom_tss)
otu_clr <- abundances(carbom_clr)
otu_log10 <- abundances(carbom_log10)
otu_z <- abundances(carbom_z)
# Save transformed OTU tables to .csv
write.csv(otu_tss, "OTU_table_TSS.csv", row.names = TRUE)
write.csv(otu_clr, "OTU_table_CLR.csv", row.names = TRUE)
write.csv(otu_log10, "OTU_table_Log10.csv", row.names = TRUE)
write.csv(otu_z, "OTU_table_Z.csv", row.names = TRUE)
# Output file paths
cat("Files saved:\n")
cat("- OTU_table_TSS.csv\n")
cat("- OTU_table_CLR.csv\n")
cat("- OTU_table_Log10.csv\n")
cat("- OTU_table_Z.csv\n")
list.taxa.passing <- core_members(carbom.compositional, detection = 1/100, prevalence = 10/100)
length(list.taxa.passing)
list.taxa.passing <- core_members(carbom.compositional, detection = 1/100, prevalence = 5/100)
length(list.taxa.passing)
list.taxa.passing <- core_members(carbom.compositional, detection = 0.5/100, prevalence = 5/100)
length(list.taxa.passing)
length(list.taxa.passing)
filtered_physeq <- subset_taxa(carbom.compositional, OTU %in% list.taxa.passing)
# transformations
carbom_tss <- t(filtered_physeq)
carbom_clr <- t(microbiome::transform(filtered_physeq, "clr"))
carbom_log10 <- t(microbiome::transform(filtered_physeq, "log10"))
carbom_z <- t(microbiome::transform(filtered_physeq, "Z"))
# Extract OTU tables
otu_tss <- abundances(carbom_tss)
otu_clr <- abundances(carbom_clr)
otu_log10 <- abundances(carbom_log10)
otu_z <- abundances(carbom_z)
# Save transformed OTU tables to .csv
write.csv(otu_tss, "OTU_table_TSS.csv", row.names = TRUE)
write.csv(otu_clr, "OTU_table_CLR.csv", row.names = TRUE)
write.csv(otu_log10, "OTU_table_Log10.csv", row.names = TRUE)
write.csv(otu_z, "OTU_table_Z.csv", row.names = TRUE)
# Output file paths
cat("Files saved:\n")
cat("- OTU_table_TSS.csv\n")
cat("- OTU_table_CLR.csv\n")
cat("- OTU_table_Log10.csv\n")
cat("- OTU_table_Z.csv\n")
View(filtered_physeq)
View(carbom.compositional)
View(otu_log10)
View(otu_tss)
View(otu_z)
View(otu_tss)
View(otu_clr)
View(otu_log10)
library("phyloseq")
library("microbiome")
library("ggplot2")      # graphics
library("readxl")       # necessary to import the data from Excel file
library("dplyr")        # filter and reformat data frames
library("tibble")       # Needed for converting column to row names
getwd() # checking file path
otu_mat<- read.csv("data_sets/HMP_V13_OTU_counts.csv", header = TRUE)
tax_mat<- read.csv("data_sets/HMP_V13_taxonomy_fix.csv", header = TRUE)
samples_df <- read.csv("data_sets/HMP_V13_participant_data.csv", header = TRUE)
otu_mat_2 <- otu_mat %>%
tibble::column_to_rownames("PSN") %>%
t() %>% # transpose for formatting
as.data.frame()
tax_mat_2 <- tax_mat %>%
as.data.frame() %>%
mutate(OTU = OTU_ID) %>%
tibble::column_to_rownames("OTU_ID")
rownames(samples_df) <- NULL
samples_df_2 <- samples_df %>%
tibble::column_to_rownames("PSN")
otu_mat_3 <- as.matrix(otu_mat_2)
tax_mat_3 <- as.matrix(tax_mat_2)
OTU = otu_table(otu_mat_3, taxa_are_rows = TRUE)
TAX = tax_table(tax_mat_3)
samples = sample_data(samples_df_2)
carbom <- phyloseq(OTU, TAX, samples)
carbom.compositional <- microbiome::transform(carbom, "compositional")
list.taxa.passing <- core_members(carbom.compositional, detection = 0.5/100, prevalence = 5/100)
length(list.taxa.passing)
filtered_physeq <- subset_taxa(carbom.compositional, OTU %in% list.taxa.passing)
# transformations
carbom_tss <- filtered_physeq
carbom_clr <- microbiome::transform(filtered_physeq, "clr")
carbom_log10 <- microbiome::transform(filtered_physeq, "log10")
carbom_z <- microbiome::transform(filtered_physeq, "Z")
# Extract OTU tables
otu_tss <- t(abundances(carbom_tss))
otu_clr <- t(abundances(carbom_clr))
otu_log10 <- t(abundances(carbom_log10))
otu_z <- t(abundances(carbom_z))
# Save transformed OTU tables to .csv
write.csv(otu_tss, "OTU_table_TSS.csv", row.names = TRUE)
write.csv(otu_clr, "OTU_table_CLR.csv", row.names = TRUE)
write.csv(otu_log10, "OTU_table_Log10.csv", row.names = TRUE)
write.csv(otu_z, "OTU_table_Z.csv", row.names = TRUE)
# Output file paths
cat("Files saved:\n")
cat("- OTU_table_TSS.csv\n")
cat("- OTU_table_CLR.csv\n")
cat("- OTU_table_Log10.csv\n")
cat("- OTU_table_Z.csv\n")
View(otu_z)
View(carbom)
list.taxa.passing <- core_members(carbom.compositional, detection = 0.1/100, prevalence = 0.5/100)
length(list.taxa.passing)
length(list.taxa.passing)
filtered_physeq <- subset_taxa(carbom.compositional, OTU %in% list.taxa.passing)
# transformations
carbom_tss <- filtered_physeq
carbom_clr <- microbiome::transform(filtered_physeq, "clr")
carbom_log10 <- microbiome::transform(filtered_physeq, "log10")
carbom_z <- microbiome::transform(filtered_physeq, "Z")
# extract OTU tables
otu_tss <- t(abundances(carbom_tss))
otu_clr <- t(abundances(carbom_clr))
otu_log10 <- t(abundances(carbom_log10))
otu_z <- t(abundances(carbom_z))
# save transformed OTU tables to .csv
write.csv(otu_tss, "OTU_table_TSS.csv", row.names = TRUE)
write.csv(otu_clr, "OTU_table_CLR.csv", row.names = TRUE)
write.csv(otu_log10, "OTU_table_Log10.csv", row.names = TRUE)
write.csv(otu_z, "OTU_table_Z.csv", row.names = TRUE)
list.taxa.passing <- core_members(carbom.compositional, detection = 0/100, prevalence = 0/100)
length(list.taxa.passing)
filtered_physeq <- subset_taxa(carbom.compositional, OTU %in% list.taxa.passing)
# transformations
carbom_tss <- filtered_physeq
carbom_clr <- microbiome::transform(filtered_physeq, "clr")
carbom_log10 <- microbiome::transform(filtered_physeq, "log10")
carbom_z <- microbiome::transform(filtered_physeq, "Z")
# extract OTU tables
otu_tss <- t(abundances(carbom_tss))
otu_clr <- t(abundances(carbom_clr))
otu_log10 <- t(abundances(carbom_log10))
otu_z <- t(abundances(carbom_z))
# save transformed OTU tables to .csv
write.csv(otu_tss, "OTU_table_TSS.csv", row.names = TRUE)
write.csv(otu_clr, "OTU_table_CLR.csv", row.names = TRUE)
write.csv(otu_log10, "OTU_table_Log10.csv", row.names = TRUE)
otu_mat<- read.csv("data_sets/HMP_V13_OTU_counts.csv", header = TRUE)
tax_mat<- read.csv("data_sets/HMP_V13_taxonomy_fix.csv", header = TRUE)
samples_df <- read.csv("data_sets/HMP_V13_participant_data.csv", header = TRUE)
library("phyloseq")
library("microbiome")
library("ggplot2")      # graphics
library("readxl")       # necessary to import the data from Excel file
library("dplyr")        # filter and reformat data frames
library("tibble")       # Needed for converting column to row names
getwd() # checking file path
# Load data
otu_mat <- read.csv("data_sets/HMP_V13_OTU_counts.csv", header = TRUE)
tax_mat <- read.csv("data_sets/HMP_V13_taxonomy_fix.csv", header = TRUE)
samples_df <- read.csv("data_sets/HMP_V13_participant_data.csv", header = TRUE)
# Format OTU matrix
otu_mat_2 <- otu_mat %>%
tibble::column_to_rownames("PSN") %>%
t() %>%
as.data.frame()
# Format taxonomy matrix
tax_mat_2 <- tax_mat %>%
as.data.frame() %>%
mutate(OTU = OTU_ID) %>%
tibble::column_to_rownames("OTU_ID")
# Format sample data
rownames(samples_df) <- NULL
samples_df_2 <- samples_df %>%
tibble::column_to_rownames("PSN")
# Convert to phyloseq objects
otu_mat_3 <- as.matrix(otu_mat_2)
tax_mat_3 <- as.matrix(tax_mat_2)
OTU = otu_table(otu_mat_3, taxa_are_rows = TRUE)
TAX = tax_table(tax_mat_3)
samples = sample_data(samples_df_2)
carbom <- phyloseq(OTU, TAX, samples)
# Define preprocessing combinations
prevalence_options <- c(TRUE, FALSE)
transformations <- c("none", "log10", "compositional", "rarefy")
for (prev in prevalence_options) {
if (prev) {
carbom.compositional <- microbiome::transform(carbom, "compositional")
list.taxa.passing <- core_members(carbom.compositional, detection = 0/100, prevalence = 0/100)
filtered_physeq <- subset_taxa(carbom.compositional, OTU %in% list.taxa.passing)
} else {
filtered_physeq <- carbom
}
for (trans in transformations) {
if (trans == "none") {
transformed_physeq <- filtered_physeq
} else {
transformed_physeq <- microbiome::transform(filtered_physeq, trans)
}
# Create file name based on combinations (00, 10, 01, 11, etc.)
prevalence_code <- ifelse(prev, "1", "0")
transformation_code <- ifelse(trans == "none", "0", ifelse(trans == "log10", "1", ifelse(trans == "compositional", "2", "3")))
filename <- paste0("data_sets/preprocessed_table_", prevalence_code, transformation_code, ".csv")
otu_table_transformed <- t(abundances(transformed_physeq))
write.csv(otu_table_transformed, filename, row.names = TRUE)
}
}
source("~/Documents/GitHub/metag_topic_modeling/MatrixPreproessor.R")
library("phyloseq")
library("microbiome")
library("ggplot2")      # graphics
library("readxl")       # necessary to import the data from Excel file
library("dplyr")        # filter and reformat data frames
library("tibble")       # Needed for converting column to row names
getwd() # checking file path
# Load data
otu_mat <- read.csv("data_sets/HMP_V13_OTU_counts.csv", header = TRUE)
tax_mat <- read.csv("data_sets/HMP_V13_taxonomy_fix.csv", header = TRUE)
samples_df <- read.csv("data_sets/HMP_V13_participant_data.csv", header = TRUE)
# Format OTU matrix
otu_mat_2 <- otu_mat %>%
tibble::column_to_rownames("PSN") %>%
t() %>%
as.data.frame()
# Format taxonomy matrix
tax_mat_2 <- tax_mat %>%
as.data.frame() %>%
mutate(OTU = OTU_ID) %>%
tibble::column_to_rownames("OTU_ID")
# Format sample data
rownames(samples_df) <- NULL
samples_df_2 <- samples_df %>%
tibble::column_to_rownames("PSN")
# Convert to phyloseq objects
otu_mat_3 <- as.matrix(otu_mat_2)
tax_mat_3 <- as.matrix(tax_mat_2)
OTU = otu_table(otu_mat_3, taxa_are_rows = TRUE)
TAX = tax_table(tax_mat_3)
samples = sample_data(samples_df_2)
carbom <- phyloseq(OTU, TAX, samples)
# Define preprocessing combinations
prevalence_options <- c(TRUE, FALSE)
transformations <- c("none", "log10", "compositional", "rarefy")
for (prev in prevalence_options) {
if (prev) {
carbom.compositional <- microbiome::transform(carbom, "compositional")
list.taxa.passing <- core_members(carbom.compositional, detection = 0.1/100, prevalence = 0.5/100)
filtered_physeq <- subset_taxa(carbom.compositional, OTU %in% list.taxa.passing)
} else {
filtered_physeq <- carbom
}
for (trans in transformations) {
if (trans == "none") {
transformed_physeq <- filtered_physeq
} else if (trans == "rarefy") {
# Apply rarefaction when 'rarefy' is selected
transformed_physeq <- rarefy_even_depth(filtered_physeq)
} else {
# Apply other transformations
transformed_physeq <- microbiome::transform(filtered_physeq, trans)
}
# Create file name based on combinations (00, 10, 01, 11, etc.)
prevalence_code <- ifelse(prev, "1", "0")
transformation_code <- ifelse(trans == "none", "0", ifelse(trans == "log10", "1", ifelse(trans == "compositional", "2", ifelse(trans == "rarefy", "3", "4"))))
filename <- paste0("data_sets/matrix/preprocessed_table_", prevalence_code, transformation_code, ".csv")
otu_table_transformed <- t(abundances(transformed_physeq))
write.csv(otu_table_transformed, filename, row.names = TRUE)
}
}
library("phyloseq")
library("microbiome")
library("ggplot2")      # graphics
library("readxl")       # necessary to import the data from Excel file
library("dplyr")        # filter and reformat data frames
library("tibble")       # Needed for converting column to row names
getwd() # checking file path
# Load data
otu_mat <- read.csv("data_sets/HMP_V13_OTU_counts.csv", header = TRUE)
tax_mat <- read.csv("data_sets/HMP_V13_taxonomy_fix.csv", header = TRUE)
samples_df <- read.csv("data_sets/HMP_V13_participant_data.csv", header = TRUE)
# Format OTU matrix
otu_mat_2 <- otu_mat %>%
tibble::column_to_rownames("PSN") %>%
t() %>%
as.data.frame()
# Format taxonomy matrix
tax_mat_2 <- tax_mat %>%
as.data.frame() %>%
mutate(OTU = OTU_ID) %>%
tibble::column_to_rownames("OTU_ID")
# Format sample data
rownames(samples_df) <- NULL
samples_df_2 <- samples_df %>%
tibble::column_to_rownames("PSN")
# Convert to phyloseq objects
otu_mat_3 <- as.matrix(otu_mat_2)
tax_mat_3 <- as.matrix(tax_mat_2)
OTU = otu_table(otu_mat_3, taxa_are_rows = TRUE)
TAX = tax_table(tax_mat_3)
samples = sample_data(samples_df_2)
carbom <- phyloseq(OTU, TAX, samples)
# Define preprocessing combinations
prevalence_options <- c(TRUE, FALSE)
transformations <- c("none", "log10", "compositional", "rarefy")
for (prev in prevalence_options) {
if (prev) {
carbom.compositional <- microbiome::transform(carbom, "compositional")
list.taxa.passing <- core_members(carbom.compositional, detection = 0.1/100, prevalence = 0.5/100)
filtered_physeq <- subset_taxa(carbom.compositional, OTU %in% list.taxa.passing)
} else {
filtered_physeq <- carbom
}
for (trans in transformations) {
if (trans == "none") {
transformed_physeq <- filtered_physeq
} else if (trans == "rarefy") {
# Apply rarefaction when 'rarefy' is selected
transformed_physeq <- rarefy_even_depth(filtered_physeq)
} else {
# Apply other transformations
transformed_physeq <- microbiome::transform(filtered_physeq, trans)
}
# Create file name based on combinations (00, 10, 01, 11, etc.)
prevalence_code <- ifelse(prev, "1", "0")
transformation_code <- ifelse(trans == "none", "0", ifelse(trans == "log10", "1", ifelse(trans == "compositional", "2", ifelse(trans == "rarefy", "3", "4"))))
filename <- paste0("data_sets/matrix/preprocessed_table_", prevalence_code, transformation_code, ".csv")
otu_table_transformed <- t(abundances(transformed_physeq))
write.csv(otu_table_transformed, filename, row.names = TRUE)
}
}
library("phyloseq")
library("microbiome")
library("ggplot2")      # graphics
library("readxl")       # necessary to import the data from Excel file
library("dplyr")        # filter and reformat data frames
library("tibble")       # Needed for converting column to row names
getwd() # checking file path
# Load data
otu_mat <- read.csv("data_sets/HMP_V13_OTU_counts.csv", header = TRUE)
tax_mat <- read.csv("data_sets/HMP_V13_taxonomy_fix.csv", header = TRUE)
samples_df <- read.csv("data_sets/HMP_V13_participant_data.csv", header = TRUE)
# Format OTU matrix
otu_mat_2 <- otu_mat %>%
tibble::column_to_rownames("PSN") %>%
t() %>%
as.data.frame()
# Format taxonomy matrix
tax_mat_2 <- tax_mat %>%
as.data.frame() %>%
mutate(OTU = OTU_ID) %>%
tibble::column_to_rownames("OTU_ID")
# Format sample data
rownames(samples_df) <- NULL
samples_df_2 <- samples_df %>%
tibble::column_to_rownames("PSN")
# Convert to phyloseq objects
otu_mat_3 <- as.matrix(otu_mat_2)
tax_mat_3 <- as.matrix(tax_mat_2)
OTU = otu_table(otu_mat_3, taxa_are_rows = TRUE)
TAX = tax_table(tax_mat_3)
samples = sample_data(samples_df_2)
carbom <- phyloseq(OTU, TAX, samples)
# Define preprocessing combinations
prevalence_options <- c(TRUE, FALSE)
transformations <- c("none", "log10", "compositional") #, "rarefy")
for (prev in prevalence_options) {
carbom.compositional <- microbiome::transform(carbom, "compositional")
list.taxa.passing <- core_members(carbom.compositional, detection = 0.1/100, prevalence = 0.5/100)
filtered_physeq <- subset_taxa(carbom.compositional, OTU %in% list.taxa.passing)
if (prev) {
carbom.compositional <- microbiome::transform(carbom, "compositional")
list.taxa.passing <- core_members(carbom.compositional, detection = 0.1/100, prevalence = 0.5/100)
filtered_physeq <- subset_taxa(carbom.compositional, OTU %in% list.taxa.passing)
} else {
filtered_physeq <- carbom
}
for (trans in transformations) {
transformed_physeq <- filtered_physeq
# } else if (trans == "rarefy") {
# Apply rarefaction when 'rarefy' is selected
#  transformed_physeq <- rarefy_even_depth(filtered_physeq)
} else {
carbom <- phyloseq(OTU, TAX, samples)
# Define preprocessing combinations
prevalence_options <- c(TRUE, FALSE)
transformations <- c("none", "log10", "compositional") #, "rarefy")
for (prev in prevalence_options) {
carbom.compositional <- microbiome::transform(carbom, "compositional")
list.taxa.passing <- core_members(carbom.compositional, detection = 0.1/100, prevalence = 0.5/100)
filtered_physeq <- subset_taxa(carbom.compositional, OTU %in% list.taxa.passing)
if (prev) {
carbom.compositional <- microbiome::transform(carbom, "compositional")
list.taxa.passing <- core_members(carbom.compositional, detection = 0.1/100, prevalence = 0.5/100)
filtered_physeq <- subset_taxa(carbom.compositional, OTU %in% list.taxa.passing)
} else {
filtered_physeq <- carbom
}
for (trans in transformations) {
transformed_physeq <- filtered_physeq
if (trans == "none") {
transformed_physeq <- filtered_physeq
} else {
# Apply other transformations
transformed_physeq <- microbiome::transform(filtered_physeq, trans)
}
# Create file name based on combinations (00, 10, 01, 11, etc.)
prevalence_code <- ifelse(prev, "1", "0")
transformation_code <- ifelse(trans == "none", "0", ifelse(trans == "log10", "1", ifelse(trans == "compositional", "2", 3) #ifelse(trans == "rarefy", "3", "4"))))
filename <- paste0("data_sets/matrix/preprocessed_table_", prevalence_code, transformation_code, ".csv")
carbom <- phyloseq(OTU, TAX, samples)
# Define preprocessing combinations
prevalence_options <- c(TRUE, FALSE)
transformations <- c("none", "log10", "compositional") #, "rarefy")
for (prev in prevalence_options) {
if (prev) {
carbom.compositional <- microbiome::transform(carbom, "compositional")
list.taxa.passing <- core_members(carbom.compositional, detection = 0.1/100, prevalence = 0.5/100)
filtered_physeq <- subset_taxa(carbom.compositional, OTU %in% list.taxa.passing)
} else {
filtered_physeq <- carbom
}
for (trans in transformations) {
if (trans == "none") {
transformed_physeq <- filtered_physeq
} else {
# Apply other transformations
transformed_physeq <- microbiome::transform(filtered_physeq, trans)
}
# } else if (trans == "rarefy") {
# Apply rarefaction when 'rarefy' is selected
#  transformed_physeq <- rarefy_even_depth(filtered_physeq)
# Create file name based on combinations (00, 10, 01, 11, etc.)
prevalence_code <- ifelse(prev, "1", "0")
transformation_code <- ifelse(trans == "none", "0", ifelse(trans == "log10", "1", ifelse(trans == "compositional", "2", 3))) #ifelse(trans == "rarefy", "3", "4"))))
filename <- paste0("data_sets/matrix/preprocessed_table_", prevalence_code, transformation_code, ".csv")
otu_table_transformed <- t(abundances(transformed_physeq))
write.csv(otu_table_transformed, filename, row.names = TRUE)
}
}
